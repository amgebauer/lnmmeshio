image: python:3.7

before_script:
  - python3.8 -m venv venv
  - . venv/bin/activate

.test: &test
  stage: test
  script:
    - pip install -r requirements-dev.txt --index-url=https://pypi.python.org/simple/ --extra-index-url=https://lnm-heartgroup.pages.gitlab.lrz.de/packages/
    - tox
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      junit: junit.xml

test_master:
  <<: *test
  script:
    - pip install -r requirements-dev.txt --index-url=https://pypi.python.org/simple/ --extra-index-url=https://lnm-heartgroup.pages.gitlab.lrz.de/packages/
    - tox
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: on_success
    - when: never

test_mr:
  <<: *test
  script:
    - pip install -r requirements-dev.txt --index-url=https://pypi.python.org/simple/ --extra-index-url=https://lnm-heartgroup.pages.gitlab.lrz.de/packages/
    - tox -e py37
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: on_success
    - when: never


version_check:
  stage: test
  script:
    - echo "Check whether version already exists"
    - VERSION=$(cat VERSION)
    - echo Version is $VERSION
    - echo Try to install this version via pip
    - if pip install lnmmeshio==$VERSION --index-url=https://pypi.python.org/simple/ --extra-index-url=https://lnm-heartgroup.pages.gitlab.lrz.de/packages/; then echo Version does already exist; exit 1; else echo Version is unique; fi
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: on_success
    - when: never

pages:
  stage: deploy
  dependencies:
    - test_mr
  script:
    - pip install -r requirements-dev.txt --index-url=https://pypi.python.org/simple/ --extra-index-url=https://lnm-heartgroup.pages.gitlab.lrz.de/packages/
    - pdoc -o ./docs/ -d numpy -n lnmmeshio
    - coverage run --source=lnmmeshio -m unittest discover test_meshio
    - coverage html
    - mkdir -p public
    - mv htmlcov public/coverage
    - mv docs public/docs
  artifacts:
    paths:
      - public
    expire_in: 30 days
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - when: never

trigger_pypi:
  stage: deploy
  script:
  - "curl --request POST --form token=$TRIGGER_PYPI_TOKEN --form ref=master https://gitlab.lrz.de/api/v4/projects/50609/trigger/pipeline"
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - when: never
